/*
Exploring a Covid 19 Dataset 
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types
*/

-- 1) Viewing all data from the Covid Deaths Table

SELECT
    *
FROM
    bold-victory-330414.covid_dataset.covid_deaths 
WHERE
    continent IS NOT NULL
order by 3,4



-- 2) Viewing all data from the Covid Vaccinations Table

SELECT
    *
FROM
    bold-victory-330414.covid_dataset.covid_vaccinations 
WHERE
    continent IS NOT NULL
ORDER BY 
     3,4


-- 3) Select the data that we'll be playing with mostly

SELECT 
    location, date, total_cases, new_cases, total_deaths, population
FROM
    bold-victory-330414.covid_dataset.covid_deaths 
WHERE
    continent IS NOT NULL
ORDER BY 
     1,2


-- 4) Comparing the Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country

SELECT
    location, date, total_cases,total_deaths, (total_deaths / total_cases)*100 as DeathPerc
FROM
    bold-victory-330414.covid_dataset.covid_deaths
WHERE
    continent IS NOT NULL AND location LIKE '%Canada%'
ORDER BY 
     1,2


-- 5) Showing Total Cases vs Population
-- Shows what percentage of population got infected with Covid

SELECT 
    location, date, population, total_cases,  (total_cases / population)*100 as PercentagePopulationInfected
FROM
    bold-victory-330414.covid_dataset.covid_deaths
WHERE
    continent IS NOT NULL
ORDER BY 
     1,2


-- 6) Countries with Highest Infection Rate vs Population

SELECT
    location, population, MAX(total_cases) as TotalInfectedCount,  Max((total_cases / population))*100 as PercentagePopulationInfected
FROM
    bold-victory-330414.covid_dataset.covid_deaths
WHERE
    continent IS NOT NULL
GROUP BY 
    location, population
ORDER BY 
    PercentagePopulationInfected DESC


-- 7) Countries with Highest Death Count per Population

SELECT 
    location, MAX(total_deaths) as TotalDeathCount, MAX (total_deaths / population)*100 AS DeathPercentage
FROM
    bold-victory-330414.covid_dataset.covid_deaths
WHERE
    continent IS NOT NULL
GROUP BY 
    location
ORDER BY    
     TotalDeathCount DESC



-- 8) Showing contintents with the highest death count as of November 22 2021

SELECT
     continent, SUM(total_deaths ) as TotalDeathCount
FROM
    bold-victory-330414.covid_dataset.covid_deaths
WHERE
    continent IS NOT NULL AND date ='2021-11-22'
GROUP BY 
    continent
ORDER BY    
     TotalDeathCount DESC



-- 9) Looking at total cases, deaths and death percentage WORLDWIDE

SELECT 
    SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths, SUM(new_deaths)/SUM(new_cases)*100 as DeathPercentage
FROM
    bold-victory-330414.covid_dataset.covid_deaths
WHERE
    continent IS NOT NULL 
--Group By date
ORDER BY 
    1,2



-- 10) Comparing Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT
    dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER ( PARTITION BY dea.location ORDER BY dea.location, dea.Date) as RollingVaccinationCount

FROM
    bold-victory-330414.covid_dataset.covid_deaths dea
INNER JOIN 
    bold-victory-330414.covid_dataset.covid_vaccinations vac
ON 
    dea.location = vac.location AND
	dea.date = vac.date
WHERE
    dea.continent IS NOT NULL 
ORDER BY 
    2,3


-- 11) Using CTE to perform a calculation on Partition By in previous query

WITH PopulationVsVaccination AS
(
SELECT
    dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER ( PARTITION BY dea.location ORDER BY dea.location, dea.Date) as RollingVaccinationCount

FROM
    bold-victory-330414.covid_dataset.covid_deaths dea
INNER JOIN 
    bold-victory-330414.covid_dataset.covid_vaccinations vac
ON 
    dea.location = vac.location AND
	dea.date = vac.date
WHERE
    dea.continent IS NOT NULL 
--ORDER BY 
--   2,3
)
SELECT 
    *, (RollingVaccinationCount/Population)*100 AS VaccinationPercentage
FROM
    PopulationVsVaccination



-- 12) Using Temp Table to perform a calculation on Partition By in previous query (10)

DROP Table IF EXISTS #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingVaccinationCount numeric
)

INSERT INTO #PercentPopulationVaccinated
SELECT
    dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER ( PARTITION BY dea.location ORDER BY dea.location, dea.Date) as RollingVaccinationCount
FROM
    bold-victory-330414.covid_dataset.covid_deaths dea
INNER JOIN 
    bold-victory-330414.covid_dataset.covid_vaccinations vac
ON 
    dea.location = vac.location AND
	dea.date = vac.date
WHERE
    dea.continent IS NOT NULL 
--ORDER BY 
--   2,3

Select
    *, (RollingVaccinationCount/Population)*100
FROM
    #PercentPopulationVaccinated



-- 13) Creating a View for storing data to visualize them later
CREATE VIEW PercentPopulationVaccinated AS
SELECT
    dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER ( PARTITION BY dea.location ORDER BY dea.location, dea.Date) as RollingVaccinationCount
FROM
    bold-victory-330414.covid_dataset.covid_deaths dea
INNER JOIN 
    bold-victory-330414.covid_dataset.covid_vaccinations vac
ON 
    dea.location = vac.location AND
	dea.date = vac.date
WHERE
    dea.continent IS NOT NULL 
--ORDER BY 
--   2,3 
